
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: cosmolet
  labels:
    app.kubernetes.io/name: cosmolet
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: cosmolet
  template:
    metadata:
      labels:
        app.kubernetes.io/name: cosmolet
    spec:
      hostNetwork: {{ .Values.daemonset.hostNetwork }}
      hostPID: {{ .Values.daemonset.hostPID }}
      serviceAccountName: {{ include "cosmolet.serviceAccountName" . }}
      containers:
        - name: cosmolet
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          securityContext:
            privileged: {{ .Values.securityContext.privileged }}
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: LOOP_INTERVAL_SECONDS
              value: "{{ .Values.config.loopIntervalSeconds }}"
            - name: BGP_ASN
              value: "{{ .Values.config.bgp.asn }}"
            - name: FRR_ENSURE_STATIC
              value: "{{ .Values.config.frr.ensureStatic }}"
            - name: VTYSH_PATH
              value: "/usr/bin/vtysh"
          ports:
            - name: http-metrics
              containerPort: 8080
          lifecycle:
            preStop:
              exec:
                command: ["/bin/sh","-c","curl -s localhost:8080/readyz >/dev/null 2>&1 || true"]
          volumeMounts:
            - name: frr-run
              mountPath: /var/run/frr
            - name: frr-etc
              mountPath: /etc/frr
      volumes:
        - name: frr-run
          hostPath: { path: /var/run/frr }
        - name: frr-etc
          hostPath: { path: /etc/frr }
